[{"D:\\coding\\project\\mespo-web\\src\\index.js":"1","D:\\coding\\project\\mespo-web\\src\\routes.js":"2","D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\index.js":"3","D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\Main\\index.js":"4","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\CreateSystem.js":"5","D:\\coding\\project\\mespo-web\\src\\Components\\TextArea.js":"6","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\TabEnvironment.js":"7","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\index.js":"8","D:\\coding\\project\\mespo-web\\src\\Components\\Button.js":"9","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\index.js":"10","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\Properties.js":"11","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\AttachEnvironment.js":"12","D:\\coding\\project\\mespo-web\\src\\Services\\SystemController.js":"13","D:\\coding\\project\\mespo-web\\src\\reportWebVitals.js":"14","D:\\coding\\project\\mespo-web\\src\\Services\\API.js":"15","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\DetailSystem.js":"16","D:\\coding\\project\\mespo-web\\src\\Components\\Alert.js":"17","D:\\coding\\project\\mespo-web\\src\\Services\\PropertiesController.js":"18","D:\\coding\\project\\mespo-web\\src\\Context\\PropertiesContext.js":"19","D:\\coding\\project\\mespo-web\\src\\Layouts\\Navigation.js":"20","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\EmptySystem.js":"21","D:\\coding\\project\\mespo-web\\src\\Components\\ButtonAction.js":"22","D:\\coding\\project\\mespo-web\\src\\Context\\SystemContext.js":"23","D:\\coding\\project\\mespo-web\\src\\Components\\Table.js":"24"},{"size":973,"mtime":1612811281331,"results":"25","hashOfConfig":"26"},{"size":1181,"mtime":1613489358737,"results":"27","hashOfConfig":"26"},{"size":233,"mtime":1612109506856,"results":"28","hashOfConfig":"26"},{"size":1129,"mtime":1612121876185,"results":"29","hashOfConfig":"26"},{"size":1889,"mtime":1612623033135,"results":"30","hashOfConfig":"26"},{"size":578,"mtime":1612120979594,"results":"31","hashOfConfig":"26"},{"size":4783,"mtime":1616895200758,"results":"32","hashOfConfig":"26"},{"size":5959,"mtime":1616894551010,"results":"33","hashOfConfig":"26"},{"size":636,"mtime":1616894433357,"results":"34","hashOfConfig":"26"},{"size":1391,"mtime":1617373255228,"results":"35","hashOfConfig":"26"},{"size":11636,"mtime":1617377734814,"results":"36","hashOfConfig":"26"},{"size":1963,"mtime":1616895200476,"results":"37","hashOfConfig":"26"},{"size":4500,"mtime":1617349869855,"results":"38","hashOfConfig":"26"},{"size":377,"mtime":1607223797732,"results":"39","hashOfConfig":"26"},{"size":2382,"mtime":1616745686313,"results":"40","hashOfConfig":"26"},{"size":2028,"mtime":1613229213613,"results":"41","hashOfConfig":"26"},{"size":265,"mtime":1612117958291,"results":"42","hashOfConfig":"26"},{"size":2616,"mtime":1617376355883,"results":"43","hashOfConfig":"26"},{"size":1354,"mtime":1617376039156,"results":"44","hashOfConfig":"26"},{"size":3053,"mtime":1612363721616,"results":"45","hashOfConfig":"26"},{"size":782,"mtime":1613143105677,"results":"46","hashOfConfig":"26"},{"size":306,"mtime":1612631977766,"results":"47","hashOfConfig":"26"},{"size":4232,"mtime":1617373236600,"results":"48","hashOfConfig":"26"},{"size":507,"mtime":1617374749218,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jywazk",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\coding\\project\\mespo-web\\src\\index.js",[],"D:\\coding\\project\\mespo-web\\src\\routes.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\index.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\Main\\index.js",[],["100","101"],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\CreateSystem.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\TextArea.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\TabEnvironment.js",["102"],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\index.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\Button.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\index.js",["103","104","105","106","107"],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\Properties.js",["108"],"import { useContext, useEffect, useState, Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport Search from '@Components/Search'\r\nimport Table from '@Components/Table'\r\nimport TableForm from '@Components/TableForm'\r\nimport EmptyProperties from './EmptyProperties'\r\nimport ModalPropertyAction from '@Components/ModalPropertyAction'\r\nimport ButtonAction from '@Components/ButtonAction'\r\n\r\nimport PropertiesController from '@Services/PropertiesController'\r\nimport { SystemContext } from '@Context/SystemContext'\r\nimport { PropertiesContext } from '@Context/PropertiesContext'\r\n\r\nimport { ReactComponent as IconInfo } from '@Icon/info.svg'\r\nimport { ReactComponent as IconMenu } from '@Icon/menu.svg'\r\nimport { ReactComponent as IconMore } from '@Icon/more.svg'\r\nimport { ReactComponent as IconArrowUp } from '@Icon/arrow-up.svg'\r\nimport { ReactComponent as IconArrowDown } from '@Icon/arrow-down.svg'\r\nimport { ReactComponent as IconAdd } from '@Icon/add-white.svg'\r\nimport { ReactComponent as IconUpload } from '@Icon/upload.svg'\r\nimport { ReactComponent as IconClose } from '@Icon/close-red.svg'\r\nimport { ReactComponent as EditSVG } from '@Icon/edit.svg'\r\nimport { ReactComponent as DeleteSVG } from '@Icon/delete.svg'\r\n\r\nexport default function Properties() {\r\n   const params = useParams()\r\n   const systemContext = useContext(SystemContext)\r\n   const system = systemContext.detailSystem.data\r\n\r\n   const propertiesContext = useContext(PropertiesContext)\r\n   const properties = propertiesContext.systemProperties\r\n\r\n   const [showMenu, setShowMenu] = useState(true)\r\n   const [showProperties, setShowProperties] = useState(true)\r\n   const [showCreate, setShowCreate] = useState(false)\r\n\r\n   useEffect(() => {\r\n      propertiesContext.fetchSystemProperties(systemContext.selectedSystem ?? params.id)\r\n   }, [systemContext.selectedSystem])\r\n\r\n   const create = () => {\r\n      PropertiesController.createProperties({ systemId: systemContext.selectedSystem, ...propertiesContext.createProperties.params })\r\n         .then((response) => {\r\n            propertiesContext.setCreateProperties((prevState) => ({\r\n               ...prevState,\r\n               data: response,\r\n               isSubmit: false,\r\n               params: { ...prevState.params, name: '', value: '', valueType: '' },\r\n            }))\r\n         })\r\n         .catch(() => {\r\n            propertiesContext.setCreateProperties((prevState) => ({ ...prevState, isSubmit: false, params: { ...prevState.params, name: '', value: '', valueType: '' } }))\r\n         })\r\n   }\r\n\r\n   const submit = (event) => {\r\n      event.preventDefault()\r\n      propertiesContext.setCreateProperties((prevState) => ({ ...prevState, isSubmit: true }))\r\n      create()\r\n   }\r\n\r\n   const deleteProperties = () => {\r\n      PropertiesController.deleteProperties(propertiesContext.selectedProperties.systemPropertyValueId, { valueVersion: propertiesContext.selectedProperties.valueVersion, propertyId: propertiesContext.selectedProperties.propertyId, propertyVersion: propertiesContext.selectedProperties.version }).then(response => {\r\n         alert('success')\r\n         propertiesContext.setSelectedProperties(null)\r\n      }).catch(() => alert('failed'), propertiesContext.setSelectedProperties(null))\r\n   }\r\n\r\n   return (\r\n      <section className='properties'>\r\n         <div className='properties__search'>\r\n            <Search placeholder={'Search Properties'} />\r\n         </div>\r\n         <div className='properties__header'>\r\n            <div className='properties__header__title'>\r\n               <h2 className='text__properties-title'>{`${system?.name ?? ''} Properties`}</h2>\r\n               <IconInfo />\r\n            </div>\r\n            <div className='properties__header__menu'>\r\n               <button className='properties__menu-btn' onClick={() => setShowMenu(!showMenu)}>\r\n                  <IconMenu />\r\n                  <span className='text__properties-menu'>Menu</span>\r\n               </button>\r\n            </div>\r\n            <div className='properties__header__info'>\r\n               <span className='text__properties-number'>{properties.items.length ?? 0}</span>\r\n               <span className='text__properties-info'>Properties</span>\r\n               {showProperties ? <IconArrowUp onClick={() => setShowProperties(!showProperties)} /> : <IconArrowDown onClick={() => setShowProperties(!showProperties)} />}\r\n            </div>\r\n         </div>\r\n         {!showProperties ? null : (\r\n            <Fragment>\r\n               {!showMenu ? null : (\r\n                  <div className='properties__menu__action'>\r\n                     <div className='properties__menu__wrapper'>\r\n                        <button className='properties__menu-item' onClick={() => setShowCreate(!showCreate)}>\r\n                           <IconAdd />\r\n                           <span className='text__properties-item'>Add a Property</span>\r\n                        </button>\r\n                        <button className='properties__menu-item'>\r\n                           <IconUpload />\r\n                           <span className='text__properties-item'>Upload Properties</span>\r\n                        </button>\r\n                        <button className='properties__menu-item'>\r\n                           <IconClose />\r\n                           <span className='text__properties-item'>Clear all</span>\r\n                        </button>\r\n                     </div>\r\n                     <button\r\n                        type='submit'\r\n                        className={`properties__menu-save ${propertiesContext.createProperties.params.name !== '' &&\r\n                           propertiesContext.createProperties.params.value !== '' &&\r\n                           propertiesContext.createProperties.params.valueType !== ''\r\n                           ? 'properties__menu-save--active'\r\n                           : ''\r\n                           }`}\r\n                        onClick={(event) => submit(event)}>\r\n                        {!propertiesContext.createProperties.isSubmit ? 'Save Changes' : 'Saving...'}\r\n                     </button>\r\n                  </div>\r\n               )}\r\n               {!showCreate ? (\r\n                  properties.items.length > 0 ? (\r\n                     <Table\r\n                        items={properties.items.map((property) => {\r\n                           return (\r\n                              <Fragment key={property.propertyId}>\r\n                                 <div className='table__body --menu'>\r\n                                    <IconMenu />\r\n                                 </div>\r\n                                 <div className='table__body --title'>{property.name}</div>\r\n                                 <div className='table__body --title'>\r\n                                    {property.valueType}\r\n                                    <span>\r\n                                       <IconArrowDown />\r\n                                    </span>\r\n                                 </div>\r\n                                 <div className='table__body --title'>{property.value}</div>\r\n                                 <div className='table__body --action' style={{ position: 'relative' }}>\r\n                                    <IconMore style={{ height: '25px' }} onClick={() => propertiesContext.setSelectedProperties(property)} />\r\n                                    {propertiesContext.selectedProperties?.propertyId !== property.propertyId ? null :\r\n                                       <ModalPropertyAction\r\n                                          onClick={() => propertiesContext.setSelectedProperties(null)}\r\n                                          title='Property Action'\r\n                                          button={\r\n                                             <Fragment>\r\n                                                <ButtonAction label='Edit' icon={<EditSVG />} />\r\n                                                <ButtonAction\r\n                                                   label='Delete'\r\n                                                   icon={<DeleteSVG />}\r\n                                                   theme='delete'\r\n                                                   onClick={() => deleteProperties()}\r\n                                                />\r\n                                             </Fragment>\r\n                                          }\r\n                                       />\r\n                                    }\r\n                                 </div>\r\n                              </Fragment>\r\n                           )\r\n                        })}\r\n                     />\r\n                  ) : (\r\n                     <EmptyProperties />\r\n                  )\r\n               ) : (\r\n                  <TableForm\r\n                     submit={submit}\r\n                     input={\r\n                        <Fragment>\r\n                           <div className='table__body --menu'>\r\n                              <IconMenu />\r\n                           </div>\r\n                           <input\r\n                              className='table__body --title'\r\n                              type='text'\r\n                              placeholder='type property name'\r\n                              value={propertiesContext.createProperties.params.name}\r\n                              onChange={({ target: { value } }) =>\r\n                                 propertiesContext.setCreateProperties((prevState) => ({ ...prevState, params: { ...propertiesContext.createProperties.params, name: value } }))\r\n                              }\r\n                           />\r\n                           <div className='table__body --title flexCenter'>\r\n                              <input\r\n                                 type='text'\r\n                                 placeholder='select'\r\n                                 style={{ color: '#fff' }}\r\n                                 value={propertiesContext.createProperties.params.valueType}\r\n                                 onChange={({ target: { value } }) =>\r\n                                    propertiesContext.setCreateProperties((prevState) => ({\r\n                                       ...prevState,\r\n                                       params: { ...propertiesContext.createProperties.params, valueType: value },\r\n                                    }))\r\n                                 }\r\n                              />\r\n                              <span>\r\n                                 <IconArrowDown />\r\n                              </span>\r\n                           </div>\r\n                           <input\r\n                              className='table__body --title'\r\n                              type='text'\r\n                              placeholder='type property value'\r\n                              value={propertiesContext.createProperties.params.value}\r\n                              onChange={({ target: { value } }) =>\r\n                                 propertiesContext.setCreateProperties((prevState) => ({ ...prevState, params: { ...propertiesContext.createProperties.params, value: value } }))\r\n                              }\r\n                           />\r\n                           <div className='table__body --action' style={{ position: 'relative' }}>\r\n                              <IconMore style={{ height: '25px' }} />\r\n                           </div>\r\n                        </Fragment>\r\n                     }\r\n                  />\r\n               )}\r\n            </Fragment>\r\n         )}\r\n      </section>\r\n   )\r\n}\r\n","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\AttachEnvironment.js",[],"D:\\coding\\project\\mespo-web\\src\\Services\\SystemController.js",[],"D:\\coding\\project\\mespo-web\\src\\reportWebVitals.js",[],"D:\\coding\\project\\mespo-web\\src\\Services\\API.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\DetailSystem.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\Alert.js",[],"D:\\coding\\project\\mespo-web\\src\\Services\\PropertiesController.js",[],"D:\\coding\\project\\mespo-web\\src\\Context\\PropertiesContext.js",[],"D:\\coding\\project\\mespo-web\\src\\Layouts\\Navigation.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\EmptySystem.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\ButtonAction.js",[],"D:\\coding\\project\\mespo-web\\src\\Context\\SystemContext.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\Table.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":23},{"ruleId":"113","severity":1,"message":"118","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":24},{"ruleId":"113","severity":1,"message":"119","line":13,"column":10,"nodeType":"115","messageId":"116","endLine":13,"endColumn":17},{"ruleId":"113","severity":1,"message":"120","line":16,"column":10,"nodeType":"115","messageId":"116","endLine":16,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":23,"column":7,"nodeType":"123","endLine":23,"endColumn":37,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":40,"column":7,"nodeType":"123","endLine":40,"endColumn":37,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ListEnvironment' is defined but never used.","'EmptyEnvironment' is defined but never used.","'history' is assigned a value but never used.","'environmentContext' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.id' and 'systemContext'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has missing dependencies: 'params.id' and 'propertiesContext'. Either include them or remove the dependency array.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [params.id, systemContext, systemContext.selectedSystem]",{"range":"135","text":"136"},"Update the dependencies array to be: [params.id, propertiesContext, systemContext.selectedSystem]",{"range":"137","text":"138"},[911,941],"[params.id, systemContext, systemContext.selectedSystem]",[1834,1864],"[params.id, propertiesContext, systemContext.selectedSystem]"]