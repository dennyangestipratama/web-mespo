[{"D:\\coding\\project\\mespo-web\\src\\index.js":"1","D:\\coding\\project\\mespo-web\\src\\routes.js":"2","D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\index.js":"3","D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\Main\\index.js":"4","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\CreateSystem.js":"5","D:\\coding\\project\\mespo-web\\src\\Components\\TextArea.js":"6","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\TabEnvironment.js":"7","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\index.js":"8","D:\\coding\\project\\mespo-web\\src\\Components\\Button.js":"9","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\index.js":"10","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\Properties.js":"11","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\AttachEnvironment.js":"12","D:\\coding\\project\\mespo-web\\src\\Services\\SystemController.js":"13","D:\\coding\\project\\mespo-web\\src\\reportWebVitals.js":"14","D:\\coding\\project\\mespo-web\\src\\Services\\API.js":"15","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\DetailSystem.js":"16","D:\\coding\\project\\mespo-web\\src\\Components\\Alert.js":"17","D:\\coding\\project\\mespo-web\\src\\Services\\PropertiesController.js":"18","D:\\coding\\project\\mespo-web\\src\\Context\\PropertiesContext.js":"19","D:\\coding\\project\\mespo-web\\src\\Layouts\\Navigation.js":"20","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\EmptySystem.js":"21","D:\\coding\\project\\mespo-web\\src\\Components\\ButtonAction.js":"22","D:\\coding\\project\\mespo-web\\src\\Context\\SystemContext.js":"23","D:\\coding\\project\\mespo-web\\src\\Components\\Table.js":"24","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\TabSystem.js":"25","D:\\coding\\project\\mespo-web\\src\\Context\\UtilsContext.js":"26","D:\\coding\\project\\mespo-web\\src\\Components\\ModalSuccess.js":"27","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\EditEnvironment.js":"28","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\AttachSystem.js":"29","D:\\coding\\project\\mespo-web\\src\\Context\\AuthContext.js":"30","D:\\coding\\project\\mespo-web\\src\\Services\\EnvironmentController.js":"31","D:\\coding\\project\\mespo-web\\src\\Components\\ModalDelete.js":"32","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\EmptyProperties.js":"33","D:\\coding\\project\\mespo-web\\src\\Context\\EnvironmentContext.js":"34"},{"size":973,"mtime":1612811281331,"results":"35","hashOfConfig":"36"},{"size":1181,"mtime":1613489358737,"results":"37","hashOfConfig":"36"},{"size":233,"mtime":1612109506856,"results":"38","hashOfConfig":"36"},{"size":1129,"mtime":1612121876185,"results":"39","hashOfConfig":"36"},{"size":1889,"mtime":1612623033135,"results":"40","hashOfConfig":"36"},{"size":578,"mtime":1612120979594,"results":"41","hashOfConfig":"36"},{"size":4919,"mtime":1619281528189,"results":"42","hashOfConfig":"36"},{"size":3164,"mtime":1619281668234,"results":"43","hashOfConfig":"36"},{"size":681,"mtime":1619273519759,"results":"44","hashOfConfig":"36"},{"size":1383,"mtime":1619279683818,"results":"45","hashOfConfig":"36"},{"size":16547,"mtime":1618651208256,"results":"46","hashOfConfig":"36"},{"size":3634,"mtime":1619281834713,"results":"47","hashOfConfig":"36"},{"size":4523,"mtime":1619278726331,"results":"48","hashOfConfig":"36"},{"size":377,"mtime":1607223797732,"results":"49","hashOfConfig":"36"},{"size":2382,"mtime":1616745686313,"results":"50","hashOfConfig":"36"},{"size":2028,"mtime":1613229213613,"results":"51","hashOfConfig":"36"},{"size":265,"mtime":1612117958291,"results":"52","hashOfConfig":"36"},{"size":2658,"mtime":1618645679259,"results":"53","hashOfConfig":"36"},{"size":1999,"mtime":1618648553831,"results":"54","hashOfConfig":"36"},{"size":3053,"mtime":1612363721616,"results":"55","hashOfConfig":"36"},{"size":782,"mtime":1613143105677,"results":"56","hashOfConfig":"36"},{"size":306,"mtime":1612631977766,"results":"57","hashOfConfig":"36"},{"size":4251,"mtime":1619275337472,"results":"58","hashOfConfig":"36"},{"size":507,"mtime":1617374749218,"results":"59","hashOfConfig":"36"},{"size":4639,"mtime":1619279107970,"results":"60","hashOfConfig":"36"},{"size":585,"mtime":1612634145621,"results":"61","hashOfConfig":"36"},{"size":613,"mtime":1612626948874,"results":"62","hashOfConfig":"36"},{"size":5369,"mtime":1614439187005,"results":"63","hashOfConfig":"36"},{"size":3714,"mtime":1619281855367,"results":"64","hashOfConfig":"36"},{"size":922,"mtime":1610817263296,"results":"65","hashOfConfig":"36"},{"size":4116,"mtime":1619280758425,"results":"66","hashOfConfig":"36"},{"size":789,"mtime":1612637999978,"results":"67","hashOfConfig":"36"},{"size":434,"mtime":1617374814698,"results":"68","hashOfConfig":"36"},{"size":4303,"mtime":1619281834351,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jywazk",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\coding\\project\\mespo-web\\src\\index.js",[],"D:\\coding\\project\\mespo-web\\src\\routes.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\index.js",[],["144","145"],"D:\\coding\\project\\mespo-web\\src\\Screens\\Features\\Main\\index.js",[],["146","147"],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\CreateSystem.js",[],["148","149"],"D:\\coding\\project\\mespo-web\\src\\Components\\TextArea.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\TabEnvironment.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\index.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\Button.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\index.js",["150"],"import { useContext, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport { SystemContext } from '@Context/SystemContext'\r\nimport { EnvironmentContext } from '@Context/EnvironmentContext'\r\nimport ListEnvironment from './ListEnvironment'\r\nimport DetailSystem from './DetailSystem'\r\nimport EmptyEnvironment from './EmptyEnvironment'\r\nimport EmptySystem from './EmptySystem'\r\nimport Properties from './Properties'\r\n\r\nexport default function Main() {\r\n   const history = useHistory()\r\n   const params = useParams()\r\n   const systemContext = useContext(SystemContext)\r\n   const environmentContext = useContext(EnvironmentContext)\r\n   const system = systemContext.detailSystem.data\r\n\r\n   useEffect(() => {\r\n      if (systemContext.detailSystem.data?.systemId !== params.id || systemContext.selectedSystem) {\r\n         systemContext.fetchDetailSystem(params.id)\r\n      }\r\n   }, [systemContext.selectedSystem])\r\n\r\n   return (\r\n      <section className='main'>\r\n         {!system ? <EmptySystem /> : <DetailSystem />}\r\n         <div className='main__sub'>\r\n            <div className='main__sub-title text__sub-title'>Environment</div>\r\n            {environmentContext.environment.items.length === 0 ? <EmptyEnvironment history={history} /> : <ListEnvironment history={history} />}\r\n         </div>\r\n         <Properties />\r\n      </section>\r\n   )\r\n}\r\n","D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\Properties.js",["151"],"import { useContext, useEffect, useState, Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport Search from '@Components/Search'\r\nimport Table from '@Components/Table'\r\nimport TableForm from '@Components/TableForm'\r\nimport EmptyProperties from './EmptyProperties'\r\nimport ModalPropertyAction from '@Components/ModalPropertyAction'\r\nimport ButtonAction from '@Components/ButtonAction'\r\n\r\nimport PropertiesController from '@Services/PropertiesController'\r\nimport { SystemContext } from '@Context/SystemContext'\r\nimport { PropertiesContext } from '@Context/PropertiesContext'\r\n\r\nimport { ReactComponent as IconInfo } from '@Icon/info.svg'\r\nimport { ReactComponent as IconMenu } from '@Icon/menu.svg'\r\nimport { ReactComponent as IconMore } from '@Icon/more.svg'\r\nimport { ReactComponent as IconArrowUp } from '@Icon/arrow-up.svg'\r\nimport { ReactComponent as IconArrowDown } from '@Icon/arrow-down.svg'\r\nimport { ReactComponent as IconAdd } from '@Icon/add-white.svg'\r\nimport { ReactComponent as IconUpload } from '@Icon/upload.svg'\r\nimport { ReactComponent as IconClose } from '@Icon/close-red.svg'\r\nimport { ReactComponent as EditSVG } from '@Icon/edit.svg'\r\nimport { ReactComponent as DeleteSVG } from '@Icon/delete.svg'\r\n\r\nexport default function Properties() {\r\n   const params = useParams()\r\n   const systemContext = useContext(SystemContext)\r\n   const system = systemContext.detailSystem.data\r\n\r\n   const propertiesContext = useContext(PropertiesContext)\r\n   const properties = propertiesContext.systemProperties\r\n\r\n   const [showMenu, setShowMenu] = useState(true)\r\n   const [showProperties, setShowProperties] = useState(true)\r\n   const [showCreate, setShowCreate] = useState(false)\r\n   const [showUpdate, setShowUpdate] = useState(false)\r\n\r\n   useEffect(() => {\r\n      propertiesContext.fetchSystemProperties(params.id ?? systemContext.selectedSystem)\r\n   }, [systemContext.selectedSystem, propertiesContext.systemProperties.isReset])\r\n\r\n   const create = () => {\r\n      PropertiesController.createProperties({ systemId: systemContext.selectedSystem, ...propertiesContext.createProperties.params })\r\n         .then((response) => {\r\n            propertiesContext.setCreateProperties((prevState) => ({\r\n               ...prevState,\r\n               data: response,\r\n               isSubmit: false,\r\n               params: { ...prevState.params, name: '', value: '', valueType: '' },\r\n            }))\r\n         })\r\n         .catch(() => {\r\n            propertiesContext.setCreateProperties((prevState) => ({ ...prevState, isSubmit: false, params: { ...prevState.params, name: '', value: '', valueType: '' } }))\r\n         })\r\n   }\r\n\r\n   const update = () => {\r\n      PropertiesController.updateSystemProperties(propertiesContext.selectedProperties.systemPropertyValueId, { ...propertiesContext.updateProperties.params })\r\n         .then((response) => {\r\n            propertiesContext.setUpdateProperties((prevState) => ({\r\n               ...prevState,\r\n               data: response,\r\n               isSubmit: false,\r\n            }))\r\n         })\r\n         .catch(() => {\r\n            propertiesContext.setUpdateProperties((prevState) => ({ ...prevState, isSubmit: false }))\r\n         })\r\n   }\r\n\r\n   const updatePropertiesValue = () => {\r\n      propertiesContext.setUpdateProperties((prevState) => ({\r\n         ...prevState,\r\n         params: {\r\n            name: propertiesContext.selectedProperties.name,\r\n            systemId: propertiesContext.selectedProperties.systemId,\r\n            propertyId: propertiesContext.selectedProperties.propertyId,\r\n            propertyTypeId: propertiesContext.selectedProperties.propertyTypeId,\r\n            value: propertiesContext.selectedProperties.value,\r\n            valueType: propertiesContext.selectedProperties.valueType,\r\n            version: propertiesContext.selectedProperties.version,\r\n            ownerPartyId: propertiesContext.selectedProperties.ownerPartyId,\r\n            valueVersion: propertiesContext.selectedProperties.valueVersion,\r\n         },\r\n      }))\r\n      setShowUpdate(!showUpdate)\r\n   }\r\n\r\n   const deleteProperties = () => {\r\n      PropertiesController.deleteProperties(propertiesContext.selectedProperties.systemPropertyValueId, {\r\n         valueVersion: propertiesContext.selectedProperties.valueVersion,\r\n         propertyId: propertiesContext.selectedProperties.propertyId,\r\n         propertyVersion: propertiesContext.selectedProperties.version,\r\n      })\r\n         .then((response) => {\r\n            propertiesContext.resetList()\r\n            propertiesContext.setSelectedProperties(null)\r\n         })\r\n         .catch(() => alert('failed'), propertiesContext.setSelectedProperties(null))\r\n   }\r\n\r\n   const submit = (event) => {\r\n      event.preventDefault()\r\n      propertiesContext.setCreateProperties((prevState) => ({ ...prevState, isSubmit: true }))\r\n      propertiesContext.resetList()\r\n      create()\r\n      setShowCreate(false)\r\n   }\r\n\r\n   const submitUpdate = (event) => {\r\n      event.preventDefault()\r\n      propertiesContext.setUpdateProperties((prevState) => ({ ...prevState, isSubmit: true }))\r\n      propertiesContext.resetList()\r\n      update()\r\n      setShowUpdate(false)\r\n      propertiesContext.setSelectedProperties(null)\r\n   }\r\n\r\n   return (\r\n      <section className='properties'>\r\n         <div className='properties__search'>\r\n            <Search placeholder={'Search Properties'} />\r\n         </div>\r\n         <div className='properties__header'>\r\n            <div className='properties__header__title'>\r\n               <h2 className='text__properties-title'>{`${system?.name ?? ''} Properties`}</h2>\r\n               <IconInfo />\r\n            </div>\r\n            <div className='properties__header__menu'>\r\n               <button className='properties__menu-btn' onClick={() => setShowMenu(!showMenu)}>\r\n                  <IconMenu />\r\n                  <span className='text__properties-menu'>Menu</span>\r\n               </button>\r\n            </div>\r\n            <div className='properties__header__info'>\r\n               <span className='text__properties-number'>{properties.items.length ?? 0}</span>\r\n               <span className='text__properties-info'>Properties</span>\r\n               {showProperties ? <IconArrowUp onClick={() => setShowProperties(!showProperties)} /> : <IconArrowDown onClick={() => setShowProperties(!showProperties)} />}\r\n            </div>\r\n         </div>\r\n         {!showProperties ? null : (\r\n            <Fragment>\r\n               {!showMenu ? null : (\r\n                  <div className='properties__menu__action'>\r\n                     <div className='properties__menu__wrapper'>\r\n                        <button className='properties__menu-item' onClick={() => setShowCreate(!showCreate)}>\r\n                           <IconAdd />\r\n                           <span className='text__properties-item'>Add a Property</span>\r\n                        </button>\r\n                        <button className='properties__menu-item'>\r\n                           <IconUpload />\r\n                           <span className='text__properties-item'>Upload Properties</span>\r\n                        </button>\r\n                        <button className='properties__menu-item'>\r\n                           <IconClose />\r\n                           <span className='text__properties-item'>Clear all</span>\r\n                        </button>\r\n                     </div>\r\n                     {!showCreate ? null : (\r\n                        <button\r\n                           type='submit'\r\n                           className={`properties__menu-save ${\r\n                              propertiesContext.createProperties.params.name !== '' &&\r\n                              propertiesContext.createProperties.params.value !== '' &&\r\n                              propertiesContext.createProperties.params.valueType !== ''\r\n                                 ? 'properties__menu-save--active'\r\n                                 : ''\r\n                           }`}\r\n                           onClick={(event) => submit(event)}>\r\n                           {!propertiesContext.createProperties.isSubmit ? 'Save Changes' : 'Saving...'}\r\n                        </button>\r\n                     )}\r\n                     {!showUpdate ? null : (\r\n                        <button type='submit' className='properties__menu-save properties__menu-save--active' onClick={(event) => submitUpdate(event)}>\r\n                           {!propertiesContext.updateProperties.isSubmit ? 'Save Changes' : 'Saving...'}\r\n                        </button>\r\n                     )}\r\n                  </div>\r\n               )}\r\n               {propertiesContext.systemProperties.isLoading ? null : properties.items.length === 0 && !showCreate ? (\r\n                  <EmptyProperties />\r\n               ) : showCreate ? (\r\n                  <TableForm\r\n                     submit={submit}\r\n                     input={\r\n                        <Fragment>\r\n                           <div className='table__body --menu'>\r\n                              <IconMenu />\r\n                           </div>\r\n                           <input\r\n                              className='table__body --title'\r\n                              type='text'\r\n                              placeholder='type property name'\r\n                              value={propertiesContext.createProperties.params.name}\r\n                              onChange={({ target: { value } }) =>\r\n                                 propertiesContext.setCreateProperties((prevState) => ({ ...prevState, params: { ...propertiesContext.createProperties.params, name: value } }))\r\n                              }\r\n                           />\r\n                           <div className='table__body --title flexCenter'>\r\n                              <input\r\n                                 type='text'\r\n                                 placeholder='select'\r\n                                 style={{ color: '#fff' }}\r\n                                 value={propertiesContext.createProperties.params.valueType}\r\n                                 onChange={({ target: { value } }) =>\r\n                                    propertiesContext.setCreateProperties((prevState) => ({\r\n                                       ...prevState,\r\n                                       params: { ...propertiesContext.createProperties.params, valueType: value },\r\n                                    }))\r\n                                 }\r\n                              />\r\n                              <span>\r\n                                 <IconArrowDown />\r\n                              </span>\r\n                           </div>\r\n                           <input\r\n                              className='table__body --title'\r\n                              type='text'\r\n                              placeholder='type property value'\r\n                              value={propertiesContext.createProperties.params.value}\r\n                              onChange={({ target: { value } }) =>\r\n                                 propertiesContext.setCreateProperties((prevState) => ({ ...prevState, params: { ...propertiesContext.createProperties.params, value: value } }))\r\n                              }\r\n                           />\r\n                           <div className='table__body --action' style={{ position: 'relative' }}>\r\n                              <IconMore style={{ height: '25px' }} />\r\n                           </div>\r\n                        </Fragment>\r\n                     }\r\n                  />\r\n               ) : showUpdate ? (\r\n                  <TableForm\r\n                     submit={submitUpdate}\r\n                     input={\r\n                        <Fragment>\r\n                           <div className='table__body --menu'>\r\n                              <IconMenu />\r\n                           </div>\r\n                           <input\r\n                              className='table__body --title'\r\n                              type='text'\r\n                              placeholder='type property name'\r\n                              value={propertiesContext.updateProperties.params.name}\r\n                              onChange={({ target: { value } }) =>\r\n                                 propertiesContext.setUpdateProperties((prevState) => ({ ...prevState, params: { ...propertiesContext.updateProperties.params, name: value } }))\r\n                              }\r\n                           />\r\n                           <div className='table__body --title flexCenter'>\r\n                              <input\r\n                                 type='text'\r\n                                 placeholder='select'\r\n                                 style={{ color: '#fff' }}\r\n                                 value={propertiesContext.updateProperties.params.valueType}\r\n                                 onChange={({ target: { value } }) =>\r\n                                    propertiesContext.setUpdateProperties((prevState) => ({\r\n                                       ...prevState,\r\n                                       params: { ...propertiesContext.updateProperties.params, valueType: value },\r\n                                    }))\r\n                                 }\r\n                              />\r\n                              <span>\r\n                                 <IconArrowDown />\r\n                              </span>\r\n                           </div>\r\n                           <input\r\n                              className='table__body --title'\r\n                              type='text'\r\n                              placeholder='type property value'\r\n                              value={propertiesContext.updateProperties.params.value}\r\n                              onChange={({ target: { value } }) =>\r\n                                 propertiesContext.setUpdateProperties((prevState) => ({ ...prevState, params: { ...propertiesContext.updateProperties.params, value: value } }))\r\n                              }\r\n                           />\r\n                           <div className='table__body --action' style={{ position: 'relative' }}>\r\n                              <IconMore style={{ height: '25px' }} />\r\n                           </div>\r\n                        </Fragment>\r\n                     }\r\n                  />\r\n               ) : (\r\n                  <ListProperties updatePropertiesValue={updatePropertiesValue} deleteProperties={deleteProperties} />\r\n               )}\r\n            </Fragment>\r\n         )}\r\n      </section>\r\n   )\r\n}\r\n\r\nfunction ListProperties({ updatePropertiesValue, deleteProperties }) {\r\n   const propertiesContext = useContext(PropertiesContext)\r\n   const properties = propertiesContext.systemProperties\r\n\r\n   return (\r\n      <Table\r\n         items={properties.items.map((property) => {\r\n            return (\r\n               <Fragment key={property.propertyId}>\r\n                  <div className='table__body --menu'>\r\n                     <IconMenu />\r\n                  </div>\r\n                  <div className='table__body --title'>{property.name}</div>\r\n                  <div className='table__body --title'>\r\n                     {property.valueType}\r\n                     <span>\r\n                        <IconArrowDown />\r\n                     </span>\r\n                  </div>\r\n                  <div className='table__body --title'>{property.value}</div>\r\n                  <div className='table__body --action' style={{ position: 'relative' }}>\r\n                     <IconMore style={{ height: '25px' }} onClick={() => propertiesContext.setSelectedProperties(property)} />\r\n                     {propertiesContext.selectedProperties?.propertyId !== property.propertyId ? null : (\r\n                        <ModalPropertyAction\r\n                           onClick={() => propertiesContext.setSelectedProperties(null)}\r\n                           title='Property Action'\r\n                           button={\r\n                              <Fragment>\r\n                                 <ButtonAction label='Edit' icon={<EditSVG />} onClick={() => updatePropertiesValue()} />\r\n                                 <ButtonAction label='Delete' icon={<DeleteSVG />} theme='delete' onClick={() => deleteProperties()} />\r\n                              </Fragment>\r\n                           }\r\n                        />\r\n                     )}\r\n                  </div>\r\n               </Fragment>\r\n            )\r\n         })}\r\n      />\r\n   )\r\n}\r\n",["152","153"],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\AttachEnvironment.js",[],"D:\\coding\\project\\mespo-web\\src\\Services\\SystemController.js",[],"D:\\coding\\project\\mespo-web\\src\\reportWebVitals.js",[],"D:\\coding\\project\\mespo-web\\src\\Services\\API.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\DetailSystem.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\Alert.js",[],"D:\\coding\\project\\mespo-web\\src\\Services\\PropertiesController.js",[],"D:\\coding\\project\\mespo-web\\src\\Context\\PropertiesContext.js",[],"D:\\coding\\project\\mespo-web\\src\\Layouts\\Navigation.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\EmptySystem.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\ButtonAction.js",[],"D:\\coding\\project\\mespo-web\\src\\Context\\SystemContext.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\Table.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\TabSystem.js",[],"D:\\coding\\project\\mespo-web\\src\\Context\\UtilsContext.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\ModalSuccess.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\EditEnvironment.js",["154"],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Action\\AttachSystem.js",[],"D:\\coding\\project\\mespo-web\\src\\Context\\AuthContext.js",[],"D:\\coding\\project\\mespo-web\\src\\Services\\EnvironmentController.js",[],"D:\\coding\\project\\mespo-web\\src\\Components\\ModalDelete.js",[],"D:\\coding\\project\\mespo-web\\src\\Screens\\SystemEnvironment\\Main\\EmptyProperties.js",[],"D:\\coding\\project\\mespo-web\\src\\Context\\EnvironmentContext.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"155","replacedBy":"161"},{"ruleId":"157","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":23,"column":7,"nodeType":"165","endLine":23,"endColumn":37,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":41,"column":7,"nodeType":"165","endLine":41,"endColumn":81,"suggestions":"168"},{"ruleId":"155","replacedBy":"169"},{"ruleId":"157","replacedBy":"170"},{"ruleId":"163","severity":1,"message":"171","line":25,"column":7,"nodeType":"165","endLine":25,"endColumn":9,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],["173"],["174"],["173"],["174"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.id' and 'systemContext'. Either include them or remove the dependency array.","ArrayExpression",["175"],"React Hook useEffect has missing dependencies: 'params.id' and 'propertiesContext'. Either include them or remove the dependency array.",["176"],["173"],["174"],"React Hook useEffect has missing dependencies: 'environmentContext' and 'params.envId'. Either include them or remove the dependency array.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [params.id, systemContext, systemContext.selectedSystem]",{"range":"184","text":"185"},"Update the dependencies array to be: [systemContext.selectedSystem, propertiesContext.systemProperties.isReset, propertiesContext, params.id]",{"range":"186","text":"187"},"Update the dependencies array to be: [environmentContext, params.envId]",{"range":"188","text":"189"},[911,941],"[params.id, systemContext, systemContext.selectedSystem]",[1890,1964],"[systemContext.selectedSystem, propertiesContext.systemProperties.isReset, propertiesContext, params.id]",[1000,1002],"[environmentContext, params.envId]"]